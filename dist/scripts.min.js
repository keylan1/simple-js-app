let pokemonRepository = (function () {
  let e = [];
  function t(t) {
    if ('object' == typeof t && 'name' in t && 'detailsUrl' in t)
      return e.push(t);
    alert('Input error, wrong properties or not an object, please try again.');
  }
  function o() {
    return e;
  }
  function n(e) {
    pokemonRepository.loadDetails(e).then(function () {
      document.querySelector('.modal');
      let t = document.querySelector('.modal-body'),
        o = document.querySelector('.modal-title');
      (o.innerHTML = ''), (t.innerHTML = '');
      let n = document.createElement('h1');
      n.innerHTML = e.name;
      let r = document.createElement('p');
      r.innerHTML = 'Pokemon height is ' + e.height / 10 + ' m.';
      let i = document.createElement('img');
      (i.src = e.imageUrl),
        o.appendChild(n),
        t.appendChild(r),
        t.appendChild(i);
    });
  }
  document.querySelector('#modal-container');
  let r = document.getElementById('search-button');
  return (
    r.addEventListener('click', function e(t) {
      t.preventDefault();
      let o = document.getElementById('search-input'),
        n = o.value.toLowerCase(),
        r = document.querySelectorAll('.pokemon-list .list-group-item'),
        i = null;
      if (
        (r.forEach((e) => {
          let t = e.querySelector('.pokemon-button'),
            o = t.getAttribute('data-pokemon');
          o.toLowerCase() === n && (i = e);
        }),
        r.forEach((e) => {
          let t = e.querySelector('.pokemon-button');
          t.classList.remove('highlight');
        }),
        i)
      ) {
        let l = i.offsetTop - 400;
        window.scrollTo({ top: l, behavior: 'smooth' });
        let a = i.querySelector('.pokemon-button');
        a.classList.add('highlight');
      }
      o.value = '';
    }),
    {
      add: t,
      getAll: o,
      loadList: function e() {
        return fetch('https://pokeapi.co/api/v2/pokemon/?limit=150')
          .then(function (e) {
            return e.json();
          })
          .then(function (e) {
            e.results.forEach(function (e) {
              t({ name: e.name, detailsUrl: e.url });
            });
          })
          .catch(function (e) {
            console.error(e);
          });
      },
      loadDetails: function e(t) {
        return fetch(t.detailsUrl)
          .then(function (e) {
            return e.json();
          })
          .then(function (e) {
            (t.imageUrl = e.sprites.front_default),
              (t.height = e.height),
              (t.types = e.types);
          })
          .catch(function (e) {
            console.error(e);
          });
      },
      addListItem: function e(t) {
        let o = document.querySelector('.pokemon-list'),
          r = document.createElement('li'),
          i = document.createElement('button');
        r.classList.add('list-group-item'),
          (i.innerText = t.name),
          i.classList.add('pokemon-button', 'btn', 'btn-secondary'),
          i.setAttribute('data-toggle', 'modal'),
          i.setAttribute('data-target', '#pokemonModal'),
          i.setAttribute('data-pokemon', t.name),
          r.appendChild(i),
          o.appendChild(r),
          i.addEventListener('click', function () {
            n(t);
          });
      },
      showDetails: n,
    }
  );
})();
pokemonRepository.loadList().then(function () {
  pokemonRepository.getAll().forEach((e) => {
    pokemonRepository.addListItem(e);
  });
});
